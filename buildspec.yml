version: 0.2

env:
  variables:
    ENVIRONMENT: dev  # Set your environment variables here
    IMAGE_REPO_NAME: ut_anagramma
    IMAGE_TAG: latest 
    AWS_DEFAULT_REGION: us-east-1
    ACCOUNTID: 271271282869

phases:
  install:
    runtime-versions:
      python: 3.8  # Specify the Python version
    commands:
      - echo Installing dependencies...
      # - python3 -m venv venv  # Create a virtual environment
      # - . venv/bin/activate  # Activate the virtual environment
      - pip install wheel setuptools>=61.0
      - pip install -r requirements.txt  # Install dependencies

  pre_build:
    commands:
      - echo Pre-build phase...

  build:
    commands:
      - echo Running tests...
      - . venv/bin/activate  # Ensure the virtual environment is activated
      - pip install pytest  # Ensure pytest is installed
      - python3 src/ut_anagramma/main_test.py  # Run your tests

  # post_build:
  #   commands:
  #     - echo Build completed. Starting Docker operations...
  #     - echo Logging in to Amazon ECR...
  #     - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ACCOUNTID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  #     - echo Building Docker image...
  #     - docker build -t $IMAGE_REPO_NAME .
  #     - echo Tagging Docker image...
  #     - docker tag $IMAGE_REPO_NAME:latest $ACCOUNTID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  #     - echo Pushing Docker image to ECR...
  #     - docker push $ACCOUNTID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
     
artifacts:
  files:
    - '**/*'  # Specify the files to include in the build artifacts
  base-directory: .  # Base directory for artifacts
